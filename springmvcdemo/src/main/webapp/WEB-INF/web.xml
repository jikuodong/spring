<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  <display-name>Archetype Created Web Application</display-name>

  <!--全局范围 内环境参数初始化-->
  <context-param>
    <param-name>contextConfigLocation</param-name> <!--参数名称-->
    <param-value>classpath:spring/ApplicationContext.xml</param-value> <!--参数取值-->
  </context-param>

  <!--以下配置的加载顺序：先ServletContext>> context-param>> listener>> filter >> servlet>>spring-->

  <!--过滤器配置-->
  <!--例：编码过滤器-->
  <filter> <!--用来声明filter的相关设定，过滤器可以截取和修改一个Servlet或JSP页面的请求或从一个Servlet或JSP页面发出的响应-->
    <filter-name>encodingFilter</filter-name> <!--指定filter的名字-->
    <!--定义filter的类的名称-->
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <!--设置是否启用异步支持-->
    <async-supported>true</async-supported>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping> <!--用来定义filter锁对应的URL-->
    <filter-name>encodingFilter</filter-name> <!--指定对应filter的名字-->
    <url-pattern>/*</url-pattern> <!--指定filter所对应的URL-->
  </filter-mapping>

  <!--监听器配置-->
  <!--例：spring监听器-->
  <listener> <!--用来设定Listener接口-->
    <!--定义Listener的类名称-->
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--防止Spring内存溢出监听器-->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <!--servlet配置-->
  <servlet> <!--用来声明一个servlet的数据-->
    <servlet-name>SpringMVC</servlet-name> <!--指定servlet的名称-->
    <!--指定servlet的类名称，这里配置了前端控制器-->
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--用来定义参数,可有多个init-param。在servlet类中通过getInitParamenter(String name)方法访问初始化参数    -->
    <init-param>
      <param-name>contextConfigLocation</param-name> <!--参数名称-->
      <param-value>classpath:spring/ApplicationContext-mvc.xml</param-value> <!--参数值-->
    </init-param>
    <!--当值为正数或零时：Servlet容器先加载数值小的servlet,再依次加载其他数值大的servlet-->
    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported> <!--设置是否启用异步支持-->
  </servlet>

  <!--用来定义servlet锁对应的URL-->
  <servlet-mapping>
    <!--指定servlet的名称-->
    <servlet-name>SpringMVC</servlet-name>
    <!--指定servlet锁对应的URL-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <!-- 连接池 启用Web监控统计功能   start-->
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name> <!-- 经常需要排除一些不必要的url -->
      <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class><!-- 这个StatViewServlet的用途包括：提供监控信息展示的html页面;提供监控信息的JSON API -->
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
  <!-- 连接池 启用Web监控统计功能   end-->
  <welcome-file-list>
    <welcome-file>/index.jsp</welcome-file>
  </welcome-file-list>
</web-app>
